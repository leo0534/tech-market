name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      JWT_SECRET: test_jwt_secret_super_seguro_para_pruebas_12345
      JWT_REFRESH_SECRET: test_refresh_secret_super_seguro_para_pruebas_67890
      PORT: 3002

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install Tesseract OCR
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr tesseract-ocr-spa
        echo "✅ Tesseract OCR instalado"
        tesseract --version

    # ✅ SOLUCIÓN: Limpiar e instalar dependencias correctamente
    - name: Clean and install dependencies
      run: |
        cd backend
        # Limpiar cualquier instalación previa
        rm -rf node_modules package-lock.json
        # Instalar dependencias desde cero
        npm ci --no-audit --no-fund

    - name: Verify Jest installation
      run: |
        cd backend
        echo "Verificando instalación de Jest..."
        npm list jest
        npm list jest-cli
        ls -la node_modules/.bin/ | grep jest

    - name: Create test environment file
      run: |
        cd backend
        echo "NODE_ENV=test" > .env.test
        echo "JWT_SECRET=test_jwt_secret_super_seguro_para_pruebas_12345" >> .env.test
        echo "JWT_REFRESH_SECRET=test_refresh_secret_super_seguro_para_pruebas_67890" >> .env.test
        echo "PORT=3002" >> .env.test
        echo "COOKIE_DOMAIN=localhost" >> .env.test

    # ✅ USAR npm test EN LUGAR DE npx
    - name: Run tests
      run: |
        cd backend
        npm test

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        fail_ci_if_error: false