// ==================================================
// Tech Market Frontend - Versi√≥n con importaciones est√°ticas
// ==================================================

console.log('üöÄ Iniciando Tech Market Frontend...');

// Importaciones est√°ticas (m√°s confiables para webpack)
import Navbar from './components/common/Navbar.js';
import HomePage from './pages/HomePage.js';
import LoginPage from './pages/LoginPage.js';
import RegisterPage from './pages/RegisterPage.js';
import ProductsPage from './pages/ProductsPage.js';
import Router from './utils/router.js';

// Funci√≥n principal para inicializar la aplicaci√≥n
async function initializeApp() {
  try {
    console.log('üéØ Inicializando aplicaci√≥n...');
    
    // Mostrar loading inicial
    showLoading();
    
    // 1. Cargar recursos externos
    await loadExternalResources();
    
    console.log('‚úÖ Todos los recursos cargados correctamente');
    
    // 2. Inicializar m√≥dulos
    initializeModules();
    
    // Ocultar loading
    hideLoading();
    
    console.log('üéâ Aplicaci√≥n inicializada correctamente');
    
  } catch (error) {
    console.error('üí• Error cr√≠tico durante la inicializaci√≥n:', error);
    hideLoading();
    renderErrorUI(error);
  }
}

// Cargar recursos externos (Bootstrap, etc.)
async function loadExternalResources() {
  const resources = [
    { type: 'css', url: 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css' },
    { type: 'css', url: 'https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css' },
    { type: 'js', url: 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js' }
  ];

  for (const resource of resources) {
    await loadResource(resource.type, resource.url);
  }
}

// Cargar un recurso individual
function loadResource(type, url) {
  return new Promise((resolve, reject) => {
    console.log(`üì¶ Cargando ${type}: ${url}`);
    
    let element;
    
    switch (type) {
      case 'css':
        element = document.createElement('link');
        element.rel = 'stylesheet';
        element.href = url;
        break;
      case 'js':
        element = document.createElement('script');
        element.src = url;
        break;
      default:
        reject(new Error(`Tipo de recurso no soportado: ${type}`));
        return;
    }
    
    element.onload = () => {
      console.log(`‚úÖ ${type} cargado: ${url}`);
      resolve();
    };
    
    element.onerror = () => {
      console.error(`‚ùå Error cargando ${type}: ${url}`);
      reject(new Error(`Failed to load ${url}`));
    };
    
    document.head.appendChild(element);
  });
}

// Inicializar todos los m√≥dulos
function initializeModules() {
  try {
    console.log('üì¶ Inicializando m√≥dulos...');
    
    // Verificar que los m√≥dulos existen
    if (!Navbar) throw new Error('Navbar no est√° definido');
    if (!HomePage) throw new Error('HomePage no est√° definido');
    if (!LoginPage) throw new Error('LoginPage no est√° definido');
    if (!RegisterPage) throw new Error('RegisterPage no est√° definido');
    if (!ProductsPage) throw new Error('ProductsPage no est√° definido');
    if (!Router) throw new Error('Router no est√° definido');

    console.log('‚úÖ Todos los m√≥dulos cargados correctamente');

    // Inicializar navbar
    initializeNavbar(Navbar);

    // Inicializar router
    initializeRouter(Router, {
      HomePage,
      LoginPage,
      RegisterPage,
      ProductsPage
    });

  } catch (error) {
    console.error('‚ùå Error inicializando m√≥dulos:', error);
    throw error;
  }
}

// Inicializar navbar
function initializeNavbar(Navbar) {
  try {
    let navbarContainer = document.getElementById('navbar');
    if (!navbarContainer) {
      navbarContainer = document.createElement('div');
      navbarContainer.id = 'navbar';
      document.body.prepend(navbarContainer);
    }
    
    const navbar = new Navbar();
    navbarContainer.innerHTML = navbar.render();
    
    if (navbar.init) {
      navbar.init();
    }
    
    console.log('‚úÖ Navbar inicializado correctamente');
  } catch (error) {
    console.error('‚ùå Error inicializando navbar:', error);
  }
}

// Inicializar router
function initializeRouter(Router, pages) {
  try {
    let appContainer = document.getElementById('app');
    if (!appContainer) {
      appContainer = document.createElement('div');
      appContainer.id = 'app';
      document.body.appendChild(appContainer);
    }

    const router = new Router();
    
    // CONFIGURAR RUTAS PRIMERO, LUEGO INICIAR
    console.log('üîÑ Configurando rutas...');
    
    // Configurar todas las rutas
    router.addRoute('/', pages.HomePage);
    router.addRoute('/login', pages.LoginPage);
    router.addRoute('/register', pages.RegisterPage);
    router.addRoute('/products', pages.ProductsPage);
    
    console.log('‚úÖ Todas las rutas configuradas:', Object.keys(router.routes));
    
    // INICIAR EL ROUTER DESPU√âS de configurar rutas
    router.init();
    
    console.log('‚úÖ Router inicializado correctamente');

  } catch (error) {
    console.error('‚ùå Error inicializando router:', error);
    renderRouterError(error);
  }
}

// Mostrar error del router
function renderRouterError(error) {
  const app = document.getElementById('app');
  if (app) {
    app.innerHTML = `
      <div class="container mt-5">
        <div class="alert alert-danger">
          <h4>Error de Router</h4>
          <p>No se pudo inicializar el sistema de navegaci√≥n.</p>
          <pre>${error.message}</pre>
          <button onclick="window.location.reload()" class="btn btn-primary">Reintentar</button>
        </div>
      </div>
    `;
  }
}

// Mostrar loading
function showLoading() {
  const loadingHTML = `
    <div id="global-loading" class="position-fixed top-0 start-0 w-100 h-100 bg-white d-flex justify-content-center align-items-center" style="z-index: 9999;">
      <div class="text-center">
        <div class="spinner-border text-primary mb-3" style="width: 3rem; height: 3rem;" role="status">
          <span class="visually-hidden">Cargando...</span>
        </div>
        <p>Cargando Tech Market...</p>
      </div>
    </div>
  `;
  document.body.innerHTML = loadingHTML;
}

// Ocultar loading
function hideLoading() {
  const loadingElement = document.getElementById('global-loading');
  if (loadingElement) {
    loadingElement.remove();
  }
}

// Renderizar pantalla de error
function renderErrorUI(error) {
  document.body.innerHTML = `
    <div class="min-vh-100 bg-light d-flex align-items-center">
      <div class="container">
        <div class="row justify-content-center">
          <div class="col-md-6">
            <div class="card shadow">
              <div class="card-body text-center p-5">
                <div class="mb-4">
                  <i class="bi bi-exclamation-triangle display-1 text-danger"></i>
                </div>
                <h1 class="h2 mb-3">Error de Carga</h1>
                <p class="text-muted mb-4">Ha ocurrido un error al cargar la aplicaci√≥n.</p>
                <div class="alert alert-danger text-start">
                  <strong>Detalles:</strong><br>
                  <code>${error.message || 'Error desconocido'}</code>
                </div>
                <button onclick="window.location.reload()" class="btn btn-primary">
                  <i class="bi bi-arrow-clockwise me-2"></i>Recargar
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
}

// Inicializar cuando el DOM est√© listo
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initializeApp);
} else {
  initializeApp();
}

console.log('üìã Script index.js cargado');